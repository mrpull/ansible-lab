---

# common
- hosts: all
  become: yes
  gather_facts: no

  tasks:

  - name: install git
    apt:
      name: git
      state: present
      update_cache: yes

# web
- hosts: web
  become: yes
  vars:
    # https://github.com/jweissig/episode-47/releases
    app_version: release-0.01
  serial: 1

  pre_tasks:

  - name: disable server in haproxy
    shell: echo "disable server ansible-lab/{{ inventory_hostname }}" | socat stdio /var/lib/haproxy/stats
    delegate_to: "{{ item }}"
    with_items: "{{ groups.lb }}"
    tags:
    - skip_ansible_lint

  tasks:

  - name: install nginx
    apt:
      name: nginx
      state: present

  - name: write our nginx.conf
    template:
      src: templates/nginx.conf.j2
      dest: /etc/nginx/nginx.conf
    notify: restart nginx

  - name: write our /etc/nginx/sites-available/default
    template:
      src: templates/default-site.j2
      dest: /etc/nginx/sites-available/default
    notify: restart nginx

  - name: clean existing website content
    file:
      path: /usr/share/nginx/html/
      state: absent

  - name: deploy website content
    git:
      repo: https://github.com/mrpull/episode-47.git
      dest: /usr/share/nginx/html/
      version: "{{ app_version }}"

  handlers:

  - name: restart nginx
    service:
      name: nginx
      state: restarted

  post_tasks:

  - name: enable server in haproxy
    shell: echo "enable server ansible-lab/{{ inventory_hostname }}" | socat stdio /var/lib/haproxy/stats
    delegate_to: "{{ item }}"
    with_items: "{{ groups.lb }}"
    tags:
    - skip_ansible_lint

# lb
- hosts: lb
  become: yes

  tasks:

  - name: Download and install haproxy and socat
    apt:
      name: "{{ item }}"
      state: present
    with_items:
    - haproxy
    - socat

  - name: Enable HAProxy
    lineinfile:
      path: /etc/default/haproxy
      regexp: "^ENABLED"
      line: "ENABLED=1"
    notify: restart haproxy

  - name: Configure the haproxy cnf file with hosts
    template:
      src: templates/haproxy.cfg.j2
      dest: /etc/haproxy/haproxy.cfg
    notify: restart haproxy

  handlers:

  - name: restart haproxy
    service:
      name: haproxy
      state: restarted
